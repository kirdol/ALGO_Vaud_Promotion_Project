---
title: "Question 1"
format:
  html:
    code-fold: true
---

# Question 1 - Expenses and where they come from, when, where and for which sector?

```{r, output = FALSE}
library(here)
library(tidyr)
library(ggridges)
library(treemap)
library(ggplot2)
library(dplyr)
library(plotly)
```

```{r}
data <- read.csv(here("data", "TMS_dataset_Vaud_20240314_FINAL.csv"), sep = ",")
```

# EDA

## Percentage of people with package & without package

```{r}
# Calculate the number of non-NA entries for each type of spending
spending_counts <- data %>%
  summarize(
    Package = sum(!is.na(F82_Total)),
    WithoutPackage = sum(!is.na(F81_Total))
  ) %>%
  gather(key = "PackageType", value = "Count")

# Calculate percentages
total_records <- sum(spending_counts$Count)
spending_counts <- spending_counts %>%
  mutate(Percentage = (Count / total_records) * 100)

# Plot the percentages with the percentage shown on the bars
ggplot(spending_counts, aes(x = PackageType, y = Percentage, fill = PackageType)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = sprintf("%.1f%%", Percentage)),  # Format the labels to one decimal place
            position = position_stack(vjust = 0.5),  # Adjust text to be inside the bars
            color = "black") +
  labs(title = "Percentage of Observations With and Without Package",
       x = "Type of Spending",
       y = "Percentage (%)") +
  scale_fill_brewer(palette = "Pastel1") + # Aesthetically pleasing color palette
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

A majority of people travelling in Vaud come without a package.

::: panel-tabset
## Average Spending by category (no package tour)

```{r}
spending_data <- data.frame(
  Spending_Type = c("Overnight stay", "Transports", "Food & Drink", "Souvenirs", "Other shopping", "Other expenses"),
  Amount = c(mean(data$F81_01, na.rm = TRUE), 
             mean(data$F81_02, na.rm = TRUE),
             mean(data$F81_03, na.rm = TRUE),
             mean(data$F81_04, na.rm = TRUE),
             mean(data$F81_05, na.rm = TRUE),
             mean(data$F81_06, na.rm = TRUE))
)

ggplot(spending_data, aes(x = Spending_Type, y = Amount, fill = Spending_Type)) +
  geom_bar(stat = "identity", color = "black") +
  labs(title = "Average Spending by Category (no package tour)", x = "Category", y = "Average Amount") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for readability
```

## Average Spending by Category (with package)

```{r}
spending_data_package <- data.frame(
  Spending_Type = c("Package", "Overnight stay", "Transports", "Food & Drink", "Souvenirs", "Other shopping", "Other expenses"),
  Amount = c(mean(data$F82_01, na.rm = TRUE), 
             mean(data$F82_02, na.rm = TRUE),
             mean(data$F82_03, na.rm = TRUE),
             mean(data$F82_04, na.rm = TRUE),
             mean(data$F82_05, na.rm = TRUE),
             mean(data$F82_06, na.rm = TRUE),
             mean(data$F82_07, na.rm = TRUE))
)

ggplot(spending_data_package, aes(x = Spending_Type, y = Amount, fill = Spending_Type)) +
  geom_bar(stat = "identity", color = "black") +
  labs(title = "Average Spending by Category", x = "Category", y = "Average Amount") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
:::

With these plots, we can clearly observe that there is a difference in spendings for people who travelled with a package compared to the ones travelling without a spending package. Overall, the main expenses of people with a package is the package itself, meaning that most of the other variables are already included in the package. On the other hand, without the package, it is interesting to see that the main spending is on the overnight stay, then the food & drinks and finally the souvenirs.

::: panel-tabset
#### Total spending per country (no package)

```{r, message = FALSE}
# Aggregate total spending for F81_Total and include continents
total_spending_F81 <- data %>%
  group_by(F05_02_ENG, F05_01_ENG) %>%
  summarize(Total_Spending_F81 = sum(F81_Total, na.rm = TRUE)) %>%
  arrange(desc(Total_Spending_F81))

# Plot for F81_Total with continent colors
ggplot(total_spending_F81, aes(x = reorder(F05_02_ENG, -Total_Spending_F81), y = Total_Spending_F81, fill = F05_01_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spending by Country (No Package)", x = "Country", y = "Total Spending") +
  scale_fill_brewer(palette = "Set3", name = "Continent") + # Color based on continent
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "bottom")  # Position the legend at the bottom
```

We can observe here that the main spenders are from Asia, Europe and the Americas.

#### Total spending per country (with package)

```{r, message = FALSE}
# Aggregate total spending for F82_Total and include continents
total_spending_F82 <- data %>%
  group_by(F05_02_ENG, F05_01_ENG) %>%
  summarize(Total_Spending_F82 = sum(F82_Total, na.rm = TRUE)) %>%
  arrange(desc(Total_Spending_F82))

# Plot for F82_Total with continent colors
ggplot(total_spending_F82, aes(x = reorder(F05_02_ENG, -Total_Spending_F82), y = Total_Spending_F82, fill = F05_01_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spending by Country (With Package)", x = "Country", y = "Total Spending") +
  scale_fill_brewer(palette = "Set3", name = "Continent") + # Color based on continent
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "bottom")  # Position the legend at the bottom
```

The tendency stays the same and we observe a peak with Thailand.

#### Average spending (no package)

```{r, message = FALSE, warning = FALSE}
# Reshape data from wide to long format
data_long <- data %>%
  pivot_longer(
    cols = F81_01:F81_06,
    names_to = "Spending_Category",
    values_to = "Amount"
  )

# Calculate the average spending for each country and each category
average_spending <- data_long %>%
  group_by(F05_02_ENG, F05_01_ENG) %>%
  summarize(Average_Spending = mean(Amount, na.rm = TRUE)) %>%
  ungroup() %>%
  arrange(desc(Average_Spending))

# Optional: Aggregate to country level without distinguishing by category
average_spending_by_country <- average_spending %>%
  group_by(F05_02_ENG, F05_01_ENG) %>%
  summarize(Average_Spending = mean(Average_Spending, na.rm = TRUE)) %>%
  arrange(desc(Average_Spending))

# Plot the average spending by country in descending order
ggplot(average_spending_by_country, aes(x = reorder(F05_02_ENG, -Average_Spending), y = Average_Spending, fill = F05_01_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Spending by Country", x = "Country", y = "Average Spending") +
  scale_fill_brewer(palette = "Set3", name = "Continent") + # Color based on continent
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "bottom")  # Position the legend at the bottom
```

Taking the average, Asia keeps the top spot followed by Australia and Europe.

#### Average spending (with package)

```{r, message = FALSE, warning = FALSE}
# Reshape data from wide to long format for package spending variables
data_long_package <- data %>%
  pivot_longer(
    cols = F82_01:F82_07,
    names_to = "Spending_Category",
    values_to = "Amount"
  )

# Calculate the average spending for each country and each category
average_spending_package <- data_long_package %>%
  group_by(F05_02_ENG, F05_01_ENG) %>%
  summarize(Average_Spending = mean(Amount, na.rm = TRUE)) %>%
  ungroup() %>%
  arrange(desc(Average_Spending))

# Optional: Aggregate to country level without distinguishing by category
average_spending_by_country_package <- average_spending_package %>%
  group_by(F05_02_ENG, F05_01_ENG) %>%
  summarize(Average_Spending = mean(Average_Spending, na.rm = TRUE)) %>%
  arrange(desc(Average_Spending))

# Plot the average spending by country for package tours in descending order
ggplot(average_spending_by_country_package, aes(x = reorder(F05_02_ENG, -Average_Spending), y = Average_Spending, fill = F05_01_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Spending on Package Tours by Country", x = "Country", y = "Average Spending") +
  scale_fill_brewer(palette = "Set3", name = "Continent") + # Color based on continent
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "bottom")  # Position the legend at the bottom
```

In the case of package, Africa seems to take the first spot.
:::

In all the cases, it is important to see if there aren't any outliers, particularly looking at the top spenders.

## Percentage of package by continent

```{r}
# Prepare the data by adding a binary column for package and non-package tours
data <- data %>%
  mutate(
    With_Package = ifelse(!is.na(F82_Total), 1, 0),  # 1 if there's a package, 0 otherwise
    Without_Package = ifelse(!is.na(F81_Total), 1, 0)  # 1 if there's no package, 0 otherwise
  )

# Summarize data to count the number of package and non-package tours by continent
continent_summary <- data %>%
  group_by(F05_01_ENG) %>%
  summarize(
    Total_Tours = n(),  # Total number of tours
    Package_Tours = sum(With_Package, na.rm = TRUE),  # Total package tours
    Non_Package_Tours = sum(Without_Package, na.rm = TRUE)  # Total non-package tours
  ) %>%
  mutate(
    Package_Tour_Percentage = (Package_Tours / Total_Tours) * 100  # Calculate the percentage
  ) %>%
  arrange(desc(Package_Tour_Percentage))  # Arrange continents in descending order of package tour percentage

# Plot the percentage of package tours by continent in descending order
p <- ggplot(continent_summary, aes(x = reorder(F05_01_ENG, -Package_Tour_Percentage), y = Package_Tour_Percentage, fill = F05_01_ENG)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = sprintf("%.1f%%", Package_Tour_Percentage)),  # Adding percentage labels
            position = position_stack(vjust = 0.5), color = "black", size = 3.5) +
  labs(title = "Percentage of Package Tours by Continent",
       x = "Continent",
       y = "Percentage of Package Tours (%)") +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")  # Removing the legend for clarity

# Display the plot
print(p)
```

## Spending by Nationality

Checking for outliers

```{r}
filtered_data <- data %>%
  rename(Continent = F05_01_ENG) %>%
  filter(F81_Total <= 100000)

ggplot(filtered_data, aes(x = F05_02_ENG, y = F81_Total, fill = Continent)) +
  geom_boxplot() +
  labs(title = "Spending by Nationality", x = "Nationality", y = "Spending") +
  scale_fill_brewer(palette = "Set3") + # Adds a color palette for the continents
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom")
```

## Distribution of Currency

```{r}
# Calculate the frequency and percentage of each currency value
currency_data <- data %>%
  count(F80) %>%
  mutate(Percentage = n / sum(n) * 100)

# Create a bar chart
ggplot(currency_data, aes(x = F80, y = Percentage, fill = F80)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = sprintf("%.1f%%", Percentage)),
            position = position_stack(vjust = 0.5),   
            color = "black",                         
            size = 3.5) +                             
  labs(title = "Distribution of Currency", x = "Currency", y = "Percentage (%)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

# ANALYSE

Top 7 countries are: Switzerland, France, UK, Germany, US, Belgium & Spain.

```{r, warning = FALSE}
# Filter data for "Aigle-Leysin-Les Mosses"
filtered_data <- data %>%
  filter(F105_OrgCode == "Aigle-Leysin-Les Mosses")

# Reshape data from wide to long format and rename categories
data_long <- filtered_data %>%
  pivot_longer(
    cols = F81_01:F81_06,
    names_to = "Spending_Category",
    values_to = "Amount"
  ) %>%
  mutate(Spending_Category = recode(Spending_Category,
    "F81_01" = "Overnight Stay",
    "F81_02" = "Transports",
    "F81_03" = "Food & Drink",
    "F81_04" = "Souvenirs",
    "F81_05" = "Other Shopping",
    "F81_06" = "Other Expenses"
  ))

# Generate the plotly interactive plot
plot <- plot_ly(data_long, x = ~Spending_Category, y = ~Amount, type = 'bar', name = 'Spending',
                marker = list(color = 'rgba(55, 128, 191, 0.7)', line = list(color = 'rgba(55, 128, 191, 1.0)', width = 1.5))) %>%
  layout(title = "Spending by Category in Aigle-Leysin-Les Mosses",
         xaxis = list(title = "Category"),
         yaxis = list(title = "Spending Amount"),
         barmode = 'group')

# Display the plot
plot
```

## Highest Continent spending in Vaud

```{r}
# Calculate the total spending by continent
total_spending_by_continent <- data %>%
  group_by(F05_01_ENG) %>%
  summarise(Total_Spending = sum(F81_Total, na.rm = TRUE)) %>%
  arrange(desc(Total_Spending))

# Print the calculated data
print(total_spending_by_continent)

# Plot the total spending by continent as a bar chart
ggplot(total_spending_by_continent, aes(x = F05_01_ENG, y = Total_Spending, fill = F05_01_ENG)) +
  geom_bar(stat = "identity", color = "black", show.legend = FALSE) +
  labs(x = "Continent", y = "Total Spending", title = "Total Spending by Continent") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
```

## Spending by city

```{r, warning = FALSE}
# Convert data to long format and rename categories
data_long <- data %>%
  pivot_longer(
    cols = F81_01:F81_06,
    names_to = "Spending_Type",
    values_to = "Amount"
  ) %>%
  mutate(Spending_Type = recode(Spending_Type,
    "F81_01" = "Overnight stay",
    "F81_02" = "Transports",
    "F81_03" = "Food & Drink",
    "F81_04" = "Souvenirs",
    "F81_05" = "Other shopping",
    "F81_06" = "Other expenses"
  ))

# Generate a list of unique cities (F105_Code)
cities <- unique(data_long$F105_OrgCode)

# Create a plotly object with a dropdown menu
p <- plot_ly(data_long, x = ~Spending_Type, y = ~Amount, type = 'bar', color = ~Spending_Type) %>%
  layout(
    title = "Spendings by City",
    xaxis = list(title = "Spending Type"),
    yaxis = list(title = "Amount"),
    updatemenus = list(
      list(
        y = 0.9,
        buttons = lapply(cities, function(city) {
          list(
            method = "update",
            args = list(
              list(
                x = list(data_long[data_long$F105_OrgCode == city,]$Spending_Type),
                y = list(data_long[data_long$F105_OrgCode == city,]$Amount)
              ),
              list(
                title = paste("Spendings for", city),
                annotations = list()
              )
            ),
            label = city
          )
        })
      )
    )
  )

p
```

## Spendings of top 7

```{r}
# Define the list of countries to include
top7 <- c("Switzerland", "France", "United Kingdom", "Germany", "United States of America", "Belgium", "Spain")

# Filter the dataset for selected countries and calculate total spendings
spendings_top7 <- data %>%
  filter(F05_02_ENG %in% top7) %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

# Create a bar plot of spendings by nationality
ggplot(spendings_top7, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Adjust text angle for better readability
        plot.title = element_text(hjust = 0.5))  # Center the title for aesthetics
```

## Spendings of top 7 countries in districts

::: panel-tabset
#### Aigle

```{r}
spendings_aigle <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Aigle-Leysin-Les Mosses") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_aigle, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Aigle-Leysin-Les Mosses",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))  
```

#### Avenches

```{r}
spendings_avenches <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Avenches Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_avenches, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Avenches Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        plot.title = element_text(hjust = 0.5))
```

#### Echallens

```{r}
spendings_echallens <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Echallens Région Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_echallens, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Echallens Région Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Estavayer/Payerne

```{r}
spendings_estavayer <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Estavayer-le-Lac/Payerne Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_estavayer, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Estavayer-le-Lac/Payerne Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Lausanne

```{r}
spendings_lausanne <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Lausanne Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_lausanne, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Lausanne Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Montreux

```{r}
spendings_montreux <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Montreux Riviera") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_montreux, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Montreux Riviera",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Moudon

```{r}
spendings_moudon <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Moudon Région Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_moudon, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Moudon Région Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Nyon

```{r}
spendings_nyon <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Nyon Région Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_nyon, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Nyon Région Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Pays d'Enhaut

```{r}
spendings_enhaut <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Pays d'Enhaut Tourisme") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_enhaut, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Pays d'Enhaut Tourisme",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Vallée de Joux

```{r}
spendings_joux <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Vallée de Joux") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_joux, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Vallée de Joux",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Villars

```{r}
spendings_villars <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Villars-Diablerets-Gryon-Bex") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_villars, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Villars-Diablerets-Gryon-Bex",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

#### Yverdon

```{r}
spendings_yverdon <- data %>%
  filter(F05_02_ENG %in% top7, F105_OrgCode == "Yverdon-les-Bains Région") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_yverdon, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Yverdon-les-Bains Région",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```
:::

## Percentage of spending category for the top 7 countries

```{r}
# Filter the data and prepare for stacking
data %>%
  filter(F05_02_ENG %in% top7) %>%
  group_by(F05_02_ENG) %>%
  summarize(
    F81_Total = sum(F81_Total, na.rm = TRUE),
    F82_Total = sum(F82_Total, na.rm = TRUE),
    Total = F81_Total + F82_Total,
    .groups = 'drop'
  ) %>%
  pivot_longer(cols = c("F81_Total", "F82_Total"), names_to = "Spending_Type", values_to = "Amount") %>%
  mutate(Percentage = Amount / Total * 100) -> spendings_prepared

ggplot(spendings_prepared, aes(x = F05_02_ENG, y = Percentage, fill = Spending_Type)) +
  geom_bar(stat = "identity", position = "stack") +
  scale_y_continuous(labels = scales::percent_format()) +
  labs(title = "Percentage Distribution of Spending Types by Country",
       x = "Country",
       y = "Percentage of Total Spendings",
       fill = "Type of Spending") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

i want a stacked bar chart, les categories sont stacked sur les bars par pays
