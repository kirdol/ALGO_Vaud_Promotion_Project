---
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
---

```{r output = FALSE}
source(here::here("scripts", "setup.R"))
data <- read.csv(here("data", "TMS_dataset_Vaud_20240314_FINAL.csv"),
                 sep = ",")
```

# Analysis

**Plot of the total number of days spent in Vaud per month of the year**

Now let's explore the number of day spent per month of the year in the Canton of Vaud.

```{r, message = FALSE, warning = FALSE}
### F12 & F13 ###
#Are we more interested in knowing when they came for holidays or how long?

#duration per month 
data <- data %>%
  mutate(
    # Convert to date format first
    date_column = dmy(F12),
    # If you want the month names instead
    month_name_column = month(date_column, label = TRUE, abbr = FALSE) # Set abbr=FALSE for full month names
  )

#order
desired_order <- c("Serial2",
                    "F05_01",
                    "F05_01_ENG",
                    "F05_02",
                    "F05_02_ENG",
                    "F05_03",
                    "F05_04",
                    "F12",
                    "F13",
                    "month_name_column",
                   "hFerienDauer")
remaining_columns <- setdiff(names(data), desired_order)
new_order <- c(desired_order, remaining_columns)
data <- data[, new_order]

# nb of days per month 
nb_days_per_month <- data %>%
  select(F12, F13, month_name_column, hFerienDauer) %>%
  group_by(month_name_column) %>%
  summarize(total_hFerienDauer = sum(hFerienDauer, na.rm = TRUE))

nb_days_per_month <- nb_days_per_month %>%
  mutate(season = case_when(
    month_name_column %in% c("December", "January", "February") ~ "Winter",
    month_name_column %in% c("March", "April", "May") ~ "Spring",
    month_name_column %in% c("June", "July", "August") ~ "Summer",
    month_name_column %in% c("September", "October", "November") ~ "Fall",
    TRUE ~ NA_character_ # for any month names not matched or NA values
  ))

#plot
ggplot(nb_days_per_month, aes(x = month_name_column, y = total_hFerienDauer, fill = season)) +
  geom_bar(stat = "identity") +
  geom_smooth(aes(group = 1), method = "loess", se = FALSE, color = "red", linetype = "dashed") +
  scale_fill_manual(values = c("Winter" = "blue", "Spring" = "green", "Summer" = "purple", "Fall" = "orange")) +
  theme_minimal() +
  labs(x = "Months", y = "Sum Holiday Durations", title = "Total Holiday Duration by Month", fill = "Season") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
 
We clearly see two major moment of the year were there is a rise in the number of days spent in Vaud: March and July. 
 
```{r, message=FALSE, fig.width=8, fig.height=8, warning=FALSE, echo=FALSE}
### F16 ### 

# do a tableau with the percentage of each trip option per nationality 
trip_counts <- data %>%
  group_by(F05_01_ENG, F05_02_ENG, F16_ENG) %>%
  summarise(count = n()) %>%
  ungroup()

# Calculate total counts per nationality
nationality_totals <- trip_counts %>%
  group_by(F05_01_ENG) %>%
  summarise(total_count = sum(count))

# Join the trip counts with the total counts per nationality
trip_percentages <- trip_counts %>%
  left_join(nationality_totals, by = "F05_01_ENG") %>%
  mutate(percentage = (count / total_count) * 100) %>% 
  select(-c(count, total_count))

trip_percentages <- trip_percentages %>%
  select(-c(F05_02_ENG)) %>% 
  group_by(F05_01_ENG, F16_ENG) %>%
  summarise(Percentages = sum(percentage, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(Percentages = round(Percentages, 1))


# datatable(trip_percentages, options = list(pageLength = 10,
#                                    class = "hover",
#                                    searchHighlight = TRUE), rownames = FALSE) 

#plot
my_colors <- c("Holidays with only one overnight stay in Switzerland" = "#FF9999",
"Round trip only within Switzerland (several overnight locations in Switzerland)" = "#9999FF",
"Round trip through Europe: only one overnight stay in Switzerland" = "#66CC99",
"Round trip through Europe: several places to stay in Switzerland" = "#E69F00")

#filter by continent for pie plots
trip_percentages_Af <- trip_percentages %>% filter(F05_01_ENG == "Africa")
trip_percentages_As <- trip_percentages %>% filter(F05_01_ENG == "Asia")
trip_percentages_AO <- trip_percentages %>% filter(F05_01_ENG == "Australia and Oceania")
trip_percentages_Eu <- trip_percentages %>% filter(F05_01_ENG == "Europe")
trip_percentages_NCA <- trip_percentages %>% filter(F05_01_ENG == "North and Central America")
trip_percentages_SA <- trip_percentages %>% filter(F05_01_ENG == "South America")

# the pie chart
trip_percentages_Af <- trip_percentages_Af %>%
  mutate(
    cs = rev(cumsum(rev(Percentages))),
    pos = Percentages/2 + lead(cs, 1),
    pos = if_else(is.na(pos), Percentages/2, pos))
trip_percentages_As <- trip_percentages_As %>%
  mutate(
    cs = rev(cumsum(rev(Percentages))),
    pos = Percentages/2 + lead(cs, 1),
    pos = if_else(is.na(pos), Percentages/2, pos))
trip_percentages_AO <- trip_percentages_AO %>%
  mutate(
    cs = rev(cumsum(rev(Percentages))),
    pos = Percentages/2 + lead(cs, 1),
    pos = if_else(is.na(pos), Percentages/2, pos))
trip_percentages_Eu <- trip_percentages_Eu %>%
  mutate(
    cs = rev(cumsum(rev(Percentages))),
    pos = Percentages/2 + lead(cs, 1),
    pos = if_else(is.na(pos), Percentages/2, pos))
trip_percentages_NCA <- trip_percentages_NCA %>%
  mutate(
    cs = rev(cumsum(rev(Percentages))),
    pos = Percentages/2 + lead(cs, 1),
    pos = if_else(is.na(pos), Percentages/2, pos))
trip_percentages_SA <- trip_percentages_SA %>%
  mutate(
    cs = rev(cumsum(rev(Percentages))),
    pos = Percentages/2 + lead(cs, 1),
    pos = if_else(is.na(pos), Percentages/2, pos))


p1 <- ggplot(trip_percentages_Af, aes(x = "", y = Percentages, fill = fct_inorder(F16_ENG))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y", start = 0) +
  theme_void() +
  theme(legend.position = "None") +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_label_repel(aes(y = pos, label = paste0(Percentages, "%")), size=6, show.legend = F, nudge_x = 1) +
  guides(fill = guide_legend(title = "F16_ENG")) +
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 0) +
  ggtitle("Africa") +
  theme(plot.title = element_text(size = 24))

p2 <- ggplot(trip_percentages_As, aes(x = "", y = Percentages, fill = fct_inorder(F16_ENG))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y", start = 0) +
  theme_void() +
  theme(legend.position = "None") +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_label_repel(aes(y = pos, label = paste0(Percentages, "%")), size=6, show.legend = F, nudge_x = 1) +
  guides(fill = guide_legend(title = "F16_ENG")) +
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 0) +
  ggtitle("Asia") +
  theme(plot.title = element_text(size = 24))


p3 <- ggplot(trip_percentages_AO, aes(x = "", y = Percentages, fill = fct_inorder(F16_ENG))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y", start = 0) +
  theme_void() +
  theme(legend.position = "None") +
        #plot.title = element_text(size = 5)) +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_label_repel(aes(y = pos, label = paste0(Percentages, "%")), size=6, show.legend = F, nudge_x = 1) +
  guides(fill = guide_legend(title = "F16_ENG")) +
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 0) +
  ggtitle("Australia & Oceania") +
  theme(plot.title = element_text(size = 24))

p4 <- ggplot(trip_percentages_Eu, aes(x = "", y = Percentages, fill = fct_inorder(F16_ENG))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y", start = 0) +
  theme_void() +
  theme(legend.position = "None") +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_label_repel(aes(y = pos, label = paste0(Percentages, "%")), size=6, show.legend = F, nudge_x = 1) +
  guides(fill = guide_legend(title = "F16_ENG")) +
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 0) +
  ggtitle("Europe ") +
  theme(plot.title = element_text(size = 24))

p5 <- ggplot(trip_percentages_NCA, aes(x = "", y = Percentages, fill = fct_inorder(F16_ENG))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y", start = 0) +
  theme_void() +
  theme(legend.position = "None") +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_label_repel(aes(y = pos, label = paste0(Percentages, "%")), size=6, show.legend = F, nudge_x = 1) +
  guides(fill = guide_legend(title = "F16_ENG")) +
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 0) +
  ggtitle("North & Central America") +
  theme(plot.title = element_text(size = 24))

p6 <- ggplot(trip_percentages_SA, aes(x = "", y = Percentages, fill = fct_inorder(F16_ENG))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y", start = 0) +
  theme_void() +
  #theme(legend.position = c(0.5, 0.2)) +
  theme(legend.position = "None") +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_label_repel(aes(y = pos, label = paste0(Percentages, "%")), size=6, show.legend = F, nudge_x = 1) +
  guides(fill = guide_legend(title = "F16_ENG")) +
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 0) +
  ggtitle("South America") +
  theme(plot.title = element_text(size = 24))

#merge plots
library(cowplot)
combined <- plot_grid(p1, p2, p3, p4, p5, p6,  align = c("v", "h"), cols = 2, rows = 3) # Horizontal alignment


# To align the plots without the legends showing on each, you can extract the legend
# from one plot and use it in the combined plot
legend <- get_legend(p6)
combined_plot_with_legend <- plot_grid(combined, legend, ncol = 1, nrow = 1)
# combined_plot_with_legend

```

Now let's explore the percentage of trip category per continent. In the survey, the visitors were asked the type of trip they were having. Therefore, you will find here the graph of the distribution of the type of trip for each continent. The choice was made among 4 possibilities that are explained in the legend of the graph. 
 
```{r, echo = TRUE, message=FALSE, out.height="100%", out.width="100%", fig.width= 10, fig.height=8}

ggplot(trip_percentages, aes(x = F05_01_ENG, y = Percentages, fill = F16_ENG)) +
  geom_bar(stat = "identity") +
  labs(x = "Country", y = "Percentages", fill = "Type of Trip") +
  ggtitle("Type of Trip by Continent of Origin") +
  scale_fill_manual(values = my_colors) + # Use your defined colors here
  geom_text(aes(label = Percentages), position = position_stack(vjust = 0.5), size = 5) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
        axis.text.y = element_text(hjust = 1, size = 10),
        legend.text = element_text(size = 9),
        legend.title = element_text(size = 0),
        #legend.box = "vertical",
        legend.position = "bottom",
        legend.key.size = unit(0.4, "cm")) + 
        guides(fill = guide_legend(nrow = 2, title = "Options"))

```

In general, we notice that most of the visitors coming from continent far away from Switzerland are coming in Switzerland for serveral nightstays during their trip in Europe. On another hand, living closer, are staying most of the time for one overnight stay in Switzerland. This is probably due to the large quantity of visitors surveyed coming from Switzerland but from other cantons or visitors coming from adjacent countries such as Germany in France, all these visitors accounting for a total of approx. 50% of the people surveyed.

**Global frenquency of nightstays in Switzerland**

Here are the distribution of the frequencies of the number of night spent during a trip in Switzerland.

```{r, message = FALSE, warning = FALSE}
### F20 ###
# Careful here: some people have 0 nightstay and only passed by switzerland for a day. 
# but answered the question 16, asking about the number of nights.
# also when f16 answered and F20 blanc ---> change NAs by 1 

data_NAs <- data %>%
  mutate(F20 = ifelse(is.na(F20), 1, F20))

F20_freq <- data_NAs %>%
  group_by(F20) %>%
  summarize(Count = n(), .groups = 'drop') %>%
  arrange(desc(Count)) # Optional: arrange in descending order of frequency

ggplot(F20_freq, aes(x = F20, y = Count, fill = F20)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(x = "Number of nights", y = "Frequency", title = "Frequency of the number of nights in Vaud") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), # Improve readability of x-axis labels
        legend.title = element_blank()) # Hide the legend if not needed
```

As the question asked to the visitor was the number of night spent in Switzerland, it is difficult to know how many nights were spent in the Canton of Vaud. Therefore, we have decided here to take into account in our analysis the global number of night in the country. In addition, as most of our data contained NAs because of the structure of the survey (according to the answer of the question F16, some people could not answer question F20, therefore their answer was reported as a NA). Thus, we have decided to count the NAs as 1 overnight stay, as it is not possible to know if they only stayed in Vaud for 1 day without staying overnight. 

We can therefore see that most of the visitors only spend in general 1 night in the canton, and few people in comparison are staying more than a week. 

```{r, message = FALSE, warning = FALSE, echo = FALSE, fig.show='hide'}

# frequency nightstays distribution per city 
distr_nightstays_per_district <- data_NAs %>% 
  select(F105_OrgCode, F20) %>%
  group_by(F105_OrgCode) 
  

distr_nightstays_per_district$F20[is.na(distr_nightstays_per_district$F20)] <- 0

# Adjust the plot theme for better readability
my_theme <- theme_minimal() +
  theme(
    text = element_text(size = 12),  # Adjust text size
    panel.grid.major = element_blank(),  # Remove major gridlines
    panel.grid.minor = element_blank(),  # Remove minor gridlines
    panel.border = element_blank(),  # Remove plot border
    axis.line = element_line(color = "black"),  # Add axis lines
    legend.position = "bottom")  # Move legend to bottom
    
# Plotting the density ridgeline plot
ggplot(distr_nightstays_per_district, aes(x = F20, y = F105_OrgCode, group = F105_OrgCode)) + 
  geom_density_ridges(fill = "#00AFBB", color = "white", alpha = 0.8) + 
  scale_x_continuous(labels = scales::comma) +
  labs(
    x = "Number of Nights",  # Adjust x-axis label
    y = "City",  # Adjust y-axis label
    title = "Density Plot of Night Stays per District",  # Add plot title
    subtitle = "Distribution of night stays across different Districts",  # Add plot subtitle
    caption = "Source: Your Dataset"  # Add data source caption
  )
```


Now let's explore the percentage of the number of days spent in Switzerland over the whole visitors' trip.

```{r, message = FALSE, warning = FALSE}
### F21 ###
#consider NA as 0 here. 

# if F20 and F21 not NAs --> take percentage of nightstays in Switzerland compared to the total length of the trip

# Add a new column with the percentage of night stays in Switzerland over the total trip night stays
data2 <- data %>%
  mutate(Percentage_Night_Stays_Switzerland = ifelse(is.na(F20) | is.na(F21), NA, (F20 / F21) * 100))

ratio_nightstays_CH_EU <- data2 %>% 
    select(F20,F21, Percentage_Night_Stays_Switzerland) %>%
    group_by() %>% 
    drop_na()

# Create the distribution histogram
ggplot(ratio_nightstays_CH_EU, aes(x = Percentage_Night_Stays_Switzerland)) +
  geom_histogram(binwidth = 10, fill = "skyblue", color = "black") +
  labs(
    title = "Distribution of the percentage of nightstays in Vaud over the whole trip",
    x = "Percentage Night Stays",
    y = "Frequency"
  ) +
  theme_minimal()
```

As this graph shows, we notice that over the whole trip, most of the people will stay around 20% of their trip in Switzerland.

Now let's explore the distribution of the arrivals per nationality over the year: 

```{r, fig.height=18, warning=FALSE}
### Deeper reasoning ###

# Where are coming from the people, per month

# Summarize data: count arrivals per month and country
monthly_arrivals <- data %>%
  group_by(month_name_column, F05_02_ENG) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  arrange(month_name_column, F05_02_ENG) # This will ensure the data is ordered, which might help in visualization

# total per country
per_country <- monthly_arrivals %>%
  select(F05_02_ENG, Count) %>%
  group_by(F05_02_ENG) %>%
  mutate(total = sum(Count)) %>%
  select(-c(Count))

per_country <- per_country %>%
  distinct()


#left join 
result <- left_join(monthly_arrivals, per_country, by = "F05_02_ENG") %>%
  distinct()

datatable(per_country, options = list(pageLength = 10,
                                   class = "hover",
                                   searchHighlight = TRUE), rownames = FALSE)

# Visualize
ggplot(result, aes(x = month_name_column, y = `F05_02_ENG`, size = Count/total)) +
  geom_point(alpha = 0.7) + # Using alpha for better visibility if points overlap
  theme_minimal() +
  labs(title = "Monthly Arrivals in Switzerland by Country of Origin",
       x = "Month",
       y = "Country of Origin",
       size = "Number of Arrivals") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

On this graph, we notice that the size of the dots, representing the monthly number of arrivals of a nationality over the total number of arrival of this particular nationality, yearly, are variating a lot according to the nationality. Unfortunately, due to the low number of data surveyed, some countries are only represented once over the whole year.

## Average spending by travel group type

Here we have calcuated the average total CHF spent during a trip to Vaud, per person, depending on who the respondent has traveled with. All the bars in this plot are non-mutually exclusive responses, meaning respondents could select multiple options, except for the bar "Only with partner", in which case the respondent only selected "traveled with partner".

```{r, echo=FALSE, output=FALSE, warning=FALSE, error=FALSE}

data <- read.csv("../data/TMS_dataset_Vaud_20240314_FINAL.csv", sep = ",")

explanations <- read.csv("../data/explanations.csv")

which(colnames(data) == "F31_01")
which(colnames(data) == "F32")

df <- data[, 18:33]

# Keep english columns only
seq(2, 17, 2)
df <- df[, seq(2, 17, 2)]

# Set responses to binary values
for (i in 1:ncol(df)) {
  df[, i] <- ifelse(df[, i] == "Applies", 1, ifelse(df[, i] == "Not applicable", 0, NA))
}

# We add a column to separate couples from families. Here people only traveled with their partner.

df$couples <- ifelse(df$F31_02_ENG == 1 & df$F31_03_ENG == 0 & df$F31_04_ENG == 0 & df$F31_05_ENG == 0, 1, 0)

# Sums of responses for frequency plot
df_sums <- list()

for (col in names(df)) {
  df_sums[[col]] <- sum(df[[col]])
}

# ggplot of frequency of responses
df_sums_df <- data.frame(Column = names(df_sums), Sum = unlist(df_sums))

#Change column names in df_sums_df
df_sums_df$Column <- c("Alone", "Partner", "Friends", "Children", "Other family", "Unknown people (group)", "Dog", "Other pet(s)", "Only with partner")
colnames(df_sums_df)[colnames(df_sums_df) == "Traveled with"] <- "Column"

# Sort by descending sum
df_sums_df$Column <- factor(df_sums_df$Column, levels = df_sums_df$Column[order(-df_sums_df$Sum)])


# make the plot in percentages

df_sums_df$Percentage <- (df_sums_df$Sum)/nrow(df)*100



# Compare traveled with and how much average CHF was spent per person

# Create total spent column and add group size columns
df$Total_spent <- ifelse(data$F81_Total != "", data$F81_Total, data$F82_Total)
df$group_size <- ifelse(data$F32 != "", data$F32, data$F33)
df$group_size <- as.numeric(df$group_size)

#Reset column names in df_sums_df
df_sums_df$Column <- c("Alone", "Partner", "Friends", "Children", "Other family", "Unknown people (group)", "Dog", "Other pet(s)", "Only with partner")

# Average spending vector
average_spending <- numeric(0)

# Average spending for visitor Alone
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_01_ENG == 1] / df$group_size[df$F31_01_ENG == 1], na.rm = TRUE) / sum(df$F31_01_ENG))
# With partner
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_02_ENG == 1] / df$group_size[df$F31_02_ENG == 1], na.rm = TRUE) / sum(df$F31_02_ENG))
# With friends
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_03_ENG == 1] / df$group_size[df$F31_03_ENG == 1], na.rm = TRUE) / sum(df$F31_03_ENG))
# With children
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_04_ENG == 1] / df$group_size[df$F31_04_ENG == 1], na.rm = TRUE) / sum(df$F31_04_ENG))
# With other family
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_05_ENG == 1] / df$group_size[df$F31_05_ENG == 1], na.rm = TRUE) / sum(df$F31_05_ENG))
# With unknown people
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_06_ENG == 1] / df$group_size[df$F31_06_ENG == 1], na.rm = TRUE) / sum(df$F31_06_ENG))
# With dog
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_07_ENG == 1] / df$group_size[df$F31_07_ENG == 1], na.rm = TRUE) / sum(df$F31_07_ENG))
# With other pet
average_spending <- c(average_spending, sum(df$Total_spent[df$F31_08_ENG == 1] / df$group_size[df$F31_08_ENG == 1], na.rm = TRUE) / sum(df$F31_08_ENG))
# Only partner
average_spending <- c(average_spending, sum(df$Total_spent[df$couples == 1] / df$group_size[df$couples == 1], na.rm = TRUE) / sum(df$couples))


# Add column to df_sums_df
df_sums_df$Spent = average_spending

# Plot average spending
# Sort by descending sum
df_sums_df$Column <- factor(df_sums_df$Column, levels = df_sums_df$Column[order(-df_sums_df$Spent)])
```

```{r}
#Plot frequency
ggplot(df_sums_df, aes(x = Column, y = Spent)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  geom_text(aes(label = paste0("CHF ", round(Spent, 0))), vjust = -0.5, size = 3, color = "black") +
  labs(title = "Average CHF spent by group type", x = "Traveled with", y = "Amount spent / person")

```



## Travel group type by nation

```{r}
# Type of groups x Country of origin
# Create bin columns for top 5 countries
data$swiss <- ifelse(data$F05_02 == "Schweiz", 1, 0)
data$french <- ifelse(data$F05_02 == "Frankreich", 1, 0)
data$british <- ifelse(data$F05_02_ENG == "United Kingdom", 1, 0)
data$german <- ifelse(data$F05_02 == "Deutschland", 1, 0)
data$american <- ifelse(data$F05_02_ENG == "United States of America", 1, 0)

# Add columns to df
df$swiss <- data$swiss
df$french <- data$french
df$british <- data$british
df$german <- data$german
df$american <- data$american

# Create new df
column_names <- c("column_name", "group_name", "swiss", "french", "british", "german", "american")
rows <- c("Alone", "Partner", "Friends", "Children", "Other family", 
          "Unknown people (group)", "Dog", "Other pet(s)", "Only with partner")
nations_groups <- data.frame(matrix(ncol=length(column_names), nrow = length(rows)))
colnames(nations_groups) <- column_names
nations_groups$group_name <- rows
nations_groups$column_name <- colnames(df)[1:nrow(nations_groups)]

# Initialize a list to store sums for each nation
sums_list <- list()

# Iterate over each row in nations_groups dataframe
for (i in 1:nrow(nations_groups)) {
  # Get the column name and group name from the current row
  column_name <- nations_groups[i, "column_name"]
  group_name <- nations_groups[i, "group_name"]
  
  # Calculate sum for each nation
  sums <- c(
    sum(df[df$swiss == 1, column_name], na.rm = TRUE),
    sum(df[df$french == 1, column_name], na.rm = TRUE),
    sum(df[df$british == 1, column_name], na.rm = TRUE),
    sum(df[df$german == 1, column_name], na.rm = TRUE),
    sum(df[df$american == 1, column_name], na.rm = TRUE)
  )
  
  # Add sums to the list
  sums_list[[i]] <- c(group_name, column_name, sums)
}

# Convert the list to a dataframe
sums_df <- as.data.frame(do.call(rbind, sums_list))

# Add column names to the dataframe
colnames(sums_df) <- c("group_name", "column_name", "swiss", "french", "british", "german", "american")

# Transform to percentages
sums_df$swiss <- round(100*as.numeric(sums_df[, "swiss"])/sum(df$swiss == 1), 2)
sums_df$french <- round(100*as.numeric(sums_df[, "french"])/sum(df$french == 1), 2)
sums_df$british <- round(100*as.numeric(sums_df[, "british"])/sum(df$british == 1), 2)
sums_df$german <- round(100*as.numeric(sums_df[, "german"])/sum(df$german == 1), 2)
sums_df$american <- round(100*as.numeric(sums_df[, "american"])/sum(df$american == 1), 2)

# Print the resulting dataframe
#print(sums_df)

# Plot group types by nation

```

Here we can see the group types of travelers (Alone, with partner, with children, etc.) For each of the top 5 nations of origin of tourists.


::: panel-tabset

# Swiss

```{r}
ggplot(sums_df, aes(x = group_name, y = swiss)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  ylim(0, 100) +
  labs(title = "Group types for Swiss tourists", x = "Traveled with", y = "Percentage") +
  geom_text(aes(label = paste0(swiss, "%")), vjust = -0.5, size = 3)
```

Swiss tourists are more likely than other nations to travel with children. They are also most likely to be traveling with a partner, and pets. This suggests that they are more likely to be visiting as a family than other tourists.

# French

```{r}
ggplot(sums_df, aes(x = group_name, y = french)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  ylim(0, 100) +
  labs(title = "Group types for French tourists", x = "Traveled with", y = "Percentage") +
  geom_text(aes(label = paste0(french, "%")), vjust = -0.5, size = 3)

```

# British

```{r}
ggplot(sums_df, aes(x = group_name, y = british)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  ylim(0, 100) +
  labs(title = "Group types for British tourists", x = "Traveled with", y = "Percentage") +
  geom_text(aes(label = paste0(british, "%")), vjust = -0.5, size = 3)

```

# German

```{r}
ggplot(sums_df, aes(x = group_name, y = german)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  ylim(0, 100) +
  labs(title = "Group types for German tourists", x = "Traveled with", y = "Percentage") +
  geom_text(aes(label = paste0(german, "%")), vjust = -0.5, size = 3)

```

German tourists are the most likely of these countries to be traveling only with their partner, as a couple.

# American

```{r}
ggplot(sums_df, aes(x = group_name, y = american)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  ylim(0, 100) +
  labs(title = "Group types for American tourists", x = "Traveled with", y = "Percentage") +
  geom_text(aes(label = paste0(american, "%")), vjust = -0.5, size = 3)


```

American tourists have by far the highest percentage of tourists traveling alone, as well as in a group of unknown people. This suggests they are more likely to be on a solo trip to Switzerland, and also be in an organised group tour with other strangers.

:::

## Spendings Analysis

## Spending by District

It is interesting for us to combine the expenses variables with the district ones in order to see in which category of spendings the travelers spend most for each district.

```{r, warning=FALSE, message=FALSE, echo=FALSE}
# Code copied from maps

# We will transform data to include corresponding leaflet district. 
#unique(data$F105_Code)

# Create a new column 'leaflet_region' with NA values
data$leaflet_districts <- NA

# Assign cities to districts based on conditions
data$leaflet_districts[data$F105_Code == "Lausanne"] <- "Lausanne"
data$leaflet_districts[data$F105_Code %in% c("Montreux", "Vevey", "La Tour-de-Peilz", "Rougemont", "Château-d'Oex", "Veytaux", "Rossinière", "Corsier-sur-Vevey", "Saint-Légier-La-Chiésaz", "Blonay", "Chardonne", "Chernex")] <- "Riviera-Pays-d'Enhaut"
data$leaflet_districts[data$F105_Code %in% c("Morges", "Yens", "Aubonne")] <- "Morges"
data$leaflet_districts[data$F105_Code %in% c("Yverdon-les-Bains", "L'Abbaye", "Vallorbe", "Orbe", "Yvonand", "La Praz", "Le Chenit", "Bullet", "Montagny-près-Yverdon", "Saint Croix", "Le Rocheray", "Le Pont", "Le Sentier", "Le Brassus", "Les Rasses", "Les Charbonnieres")] <- "Jura-Nord vaudois"
data$leaflet_districts[data$F105_Code %in% c("Aigle", "Leysin", "Villeneuve (VD)", "Ormont-Dessus", "Bex", "Lavey-Morcles", "Gryon", "Ormont-Dessous", "Les Diablerets", "Villars-sur-Ollon")] <- "Aigle"
data$leaflet_districts[data$F105_Code %in% c("Nyon", "Prangins", "Chavannes-de-Bogis", "Coppet", "Rolle", "Commugny", "Duillier", "Gilly", "Founex")] <- "Nyon"
data$leaflet_districts[data$F105_Code %in% c("Valbroye", "Lucens", "Avenches", "Payerne", "Cudrefin", "St. Aubin", "Estavayer-le-Lac")] <- "Broye-Vully"
data$leaflet_districts[data$F105_Code %in% c("Crissier", "Bussigny", "Ecublens (VD)", "Renens", "Saint-Sulpice (VD)")] <- "Ouest lausannois"
data$leaflet_districts[data$F105_Code %in% c("Chexbres", "Bourg-en-Lavaux", "Cully")] <- "Lavaux-Oron"
data$leaflet_districts[data$F105_Code %in% c("Echallens")] <- "Gros-de-Vaud"

```

```{r, echo = FALSE, warning = FALSE}
# Convert data to long format and rename categories
data_long <- data %>%
  pivot_longer(
    cols = F81_01:F81_06,
    names_to = "Spending_Type",
    values_to = "Amount"
  ) %>%
  mutate(Spending_Type = recode(Spending_Type,
    "F81_01" = "Overnight stay",
    "F81_02" = "Transports",
    "F81_03" = "Food & Drink",
    "F81_04" = "Souvenirs",
    "F81_05" = "Other shopping",
    "F81_06" = "Other expenses"
  ))

# Generate a list of unique cities (leaflet_districts assumed correct column name)
cities <- unique(data_long$leaflet_districts)

# Create a plotly object with a dropdown menu
p <- plot_ly(data_long, x = ~Spending_Type, y = ~Amount, type = 'bar', colors = ~Spending_Type) %>%
  layout(
    title = "Spendings by City",
    xaxis = list(title = "Spending Type"),
    yaxis = list(title = "Amount"),
    showlegend = FALSE,  # Set this to FALSE to remove the legend
    updatemenus = list(
      list(
        y = 0.9,
        buttons = lapply(cities, function(city) {
          list(
            method = "update",
            args = list(
              list(
                x = list(data_long[data_long$leaflet_districts == city,]$Spending_Type),
                y = list(data_long[data_long$leaflet_districts == city,]$Amount)
              ),
              list(
                title = paste("Spendings for", city),
                annotations = list()
              )
            ),
            label = city
          )
        })
      )
    )
  )

# Print the plot object to display it
p
```

In all cases, overnight stay is the category most spent on. It is followed mainly by Food & Drinks, Transports and Souvenirs. Looking at the Ouest Lausannois, we notice that travelers also spend on other expenses. 

Next, we will go through the spendings for our main countries.

## Spendings of countries

We want to compare the total spendings for our seven countries of interest compared to the spendings per person.

```{r, warning = FALSE, echo = FALSE}
# Define the list of countries to include
top7 <- c("Switzerland", "France", "United Kingdom", "Germany", "United States of America", "Belgium", "Spain")

# Filter the dataset for selected countries and calculate total spendings
spendings_top7 <- data %>%
  filter(F05_02_ENG %in% top7) %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

# Create spending / person
spendings_top7$per_person = spendings_top7$Total_Spendings/c(nrow(data[data$F05_02_ENG == "Belgium",]), nrow(data[data$F05_02_ENG == "France",]), nrow(data[data$F05_02_ENG == "Germany",]), nrow(data[data$F05_02_ENG == "Spain",]), nrow(data[data$F05_02_ENG == "Switzerland",]), nrow(data[data$F05_02_ENG == "United Kingdom",]), nrow(data[data$F05_02_ENG == "United States of America",]))

```

::: panel-tabset
#### Total

```{r, warning = FALSE, echo = FALSE}

# Create a bar plot of spendings by nationality
ggplot(spendings_top7, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Adjust text angle for better readability
        plot.title = element_text(hjust = 0.5))  # Center the title for aesthetics
```

#### Per person

```{r, warning = FALSE, echo = FALSE}

# Create a bar plot of spendings by nationality
ggplot(spendings_top7, aes(x = F05_02_ENG, y = per_person, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality",
       x = "Nationality",
       y = "Spendings per person",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Adjust text angle for better readability
        plot.title = element_text(hjust = 0.5))  # Center the title for aesthetics
```

:::

We notice that by taking spending per person, Americans are the main spenders, followed by the British and the Spanish. When comparing to the total spending, where Swiss, American and French are the highest, the results for individual spending is more interesting.

## Spendings of countries per districts

Now, we will focus on these countries spending in our districts. The aim for this is to see in which district we find more nationalities and how much they spend in each district.

::: panel-tabset
#### Aigle

```{r, warning = FALSE, echo = FALSE}
spendings_aigle <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Aigle") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_aigle, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Aigle",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))  
```

Top spenders: Swiss, French and British travellers.

#### Morges

```{r, warning = FALSE, echo = FALSE}
spendings_avenches <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Morges") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_avenches, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Morges",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        plot.title = element_text(hjust = 0.5))
```

Top Spenders: Swiss, American, French and British.

#### Gros-de-Vaud

```{r, warning = FALSE, echo = FALSE}
spendings_echallens <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Gros-de-Vaud") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_echallens, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Gros-de-Vaud",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: None of our seven countries of interest.

#### Broye-Vully

```{r, warning = FALSE, echo = FALSE}
spendings_estavayer <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Broye-Vully") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_estavayer, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Broye-Vully",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: Swiss, French and Spanish travelers.

#### Lausanne

```{r, warning = FALSE, echo = FALSE}
spendings_lausanne <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Lausanne") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_lausanne, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Lausanne",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: American, French, Swiss and British travelers.

#### Riviera-Pays-d'Enhaut

```{r, warning = FALSE, echo = FALSE}
spendings_montreux <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Riviera-Pays-d'Enhaut") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_montreux, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Riviera-Pays-d'Enhaut",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: Swiss, American and French spenders.

#### Lavaux-Oron

```{r, warning = FALSE, echo = FALSE}
spendings_moudon <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Lavaux-Oron") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_moudon, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Lavaux-Oron",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: Swiss, Spanish and German travelers.

#### Nyon

```{r, warning = FALSE, echo = FALSE}
spendings_nyon <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Nyon") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_nyon, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Nyon",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: French, American and Swiss travelers.

#### Ouest lausannois

```{r, warning = FALSE, echo = FALSE}
spendings_enhaut <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Ouest lausannois") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_enhaut, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Ouest lausannois",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: American, French and Swiss travelers.

#### Jura-Nord vaudois

```{r, warning = FALSE, echo = FALSE}
spendings_yverdon <- data %>%
  filter(F05_02_ENG %in% top7, leaflet_districts == "Jura-Nord vaudois") %>%
  group_by(F05_02_ENG) %>%
  summarize(
    Total_Spendings = sum(F81_Total, na.rm = TRUE) + sum(F82_Total, na.rm = TRUE),
    .groups = 'drop'
  )

ggplot(spendings_yverdon, aes(x = F05_02_ENG, y = Total_Spendings, fill = F05_02_ENG)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Spendings by Nationality in Jura-Nord vaudois",
       x = "Nationality",
       y = "Total Spendings",
       fill = "Nationality") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  
        plot.title = element_text(hjust = 0.5))
```

Top spenders: Swiss, only a few French and German travelers.

:::

As a result, we notice that some countries such as Spain, Germany or the United Kingdom are more present and spend more in some district than some others. French, Swiss and Americans seem to be very present in most district and have pretty high expenses in each for a lot of scenarios.